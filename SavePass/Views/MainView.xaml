<UserControl x:Class="Zabrodin.SavePass.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:properties="clr-namespace:Zabrodin.SavePass.Properties"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:ui="clr-namespace:Zabrodin.SavePass.Extensions.UI"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" d:DesignHeight="500" d:DesignWidth="800">
	<UserControl.Resources>
		<Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}"
		       x:Key="ToolTipButtonStyle">
			<Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
			<Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
			<Setter Property="ToolTipService.IsEnabled" Value="True"/>
			<Style.Triggers>
				<Trigger Property="Content" Value="{x:Null}">
					<Setter Property="ToolTipService.IsEnabled" Value="False"/>
				</Trigger>
				<Trigger Property="Content" Value="{x:Static system:String.Empty}">
					<Setter Property="ToolTipService.IsEnabled" Value="False"/>
				</Trigger>
			</Style.Triggers>
		</Style>
	</UserControl.Resources>

	<md:DialogHost Identifier="MainDialog">
		<md:DrawerHost>
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>

				<Grid Grid.Row="1" Background="Black" Opacity="0.15" ZIndex="1">
					<Grid.Style>
						<Style TargetType="Grid">
							<Setter Property="Visibility" Value="Collapsed"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding Repository}" Value="{x:Null}">
									<Setter Property="Visibility" Value="Visible"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Grid.Style>
				</Grid>

				<Grid Grid.Row="1">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="1.5*"/>
						<ColumnDefinition Width="3*"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="*"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>

					<md:Card VerticalAlignment="Stretch" Margin="8 8 4 8" Grid.Column="0" Grid.Row="0">
						<Grid>
							<ListBox ItemsSource="{Binding Items}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedItem}">
								<ListBox.ContextMenu>
									<ContextMenu>
										<MenuItem Header="{x:Static properties:Captions.AddEntry}" Icon="{md:PackIcon Plus}"
										          Command="{Binding AddItemCommand}"/>
									</ContextMenu>
								</ListBox.ContextMenu>

								<ListBox.ItemContainerStyle>
									<Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
										<Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"/>
										<Setter Property="ContextMenu">
											<Setter.Value>
												<ContextMenu>
													<MenuItem Header="{x:Static properties:Captions.AddEntry}" Icon="{md:PackIcon Plus}"
													          Command="{Binding PlacementTarget.Tag.AddItemCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
													<MenuItem Header="{x:Static properties:Captions.EditEntry}" Icon="{md:PackIcon Pencil}"
													          Command="{Binding PlacementTarget.Tag.EditItemCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
													<MenuItem Header="{x:Static properties:Captions.RemoveEntry}" Icon="{md:PackIcon Delete}"
													          Command="{Binding PlacementTarget.Tag.RemoveItemCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
												</ContextMenu>
											</Setter.Value>
										</Setter>
									</Style>
								</ListBox.ItemContainerStyle>
							</ListBox>

							<md:PopupBox Margin="8" HorizontalAlignment="Right" VerticalAlignment="Bottom">
								<md:PopupBox.Style>
									<Style TargetType="md:PopupBox" BasedOn="{StaticResource MaterialDesignMultiFloatingActionPopupBox}">
										<Setter Property="IsEnabled" Value="True"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding Repository}" Value="{x:Null}">
												<Setter Property="IsEnabled" Value="False"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</md:PopupBox.Style>
								<StackPanel>
									<Button ToolTip="{x:Static properties:Captions.RemoveEntry}" Content="{md:PackIcon Delete}"
									        Command="{Binding RemoveItemCommand}"/>
									<Button ToolTip="{x:Static properties:Captions.EditEntry}" Content="{md:PackIcon Pencil}"
									        Command="{Binding EditItemCommand}"/>
									<Button ToolTip="{x:Static properties:Captions.AddEntry}" Content="{md:PackIcon Plus}"
									        Command="{Binding AddItemCommand}"/>
								</StackPanel>
							</md:PopupBox>
						</Grid>
					</md:Card>

					<md:Card VerticalAlignment="Stretch" Margin="4 8 8 8" Grid.Column="1" Grid.Row="0">
						<md:Card.Style>
							<Style TargetType="md:Card">
								<Setter Property="Visibility" Value="Visible"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding SelectedItem}" Value="{x:Null}">
										<Setter Property="Visibility" Value="Collapsed"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</md:Card.Style>

						<Grid Margin="4">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>

							<TextBlock Margin="8" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
							           Style="{DynamicResource MaterialDesignTitleTextBlock}"
							           Text="{Binding SelectedItem.Name}"/>

							<TextBlock Margin="8 4 0 4" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center"
							           Text="{x:Static properties:Captions.UserName}"/>
							<Button Margin="4 4 8 4" Grid.Column="1" Grid.Row="1" HorizontalContentAlignment="Left"
							        ToolTip="{x:Static properties:Captions.CopyToClipboard}"
							        Style="{DynamicResource ToolTipButtonStyle}" Content="{Binding SelectedItem.UserName}"
							        Command="{Binding CopyToClipboardCommand}" CommandParameter="{Binding SelectedItem.UserName}"/>

							<TextBlock Margin="8 4 0 4" Grid.Column="0" Grid.Row="2" VerticalAlignment="Center"
							           Text="{x:Static properties:Captions.Password}"/>
							<Grid Grid.Column="1" Grid.Row="2">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>

								<Button Margin="4 4 8 4" Grid.Column="0" HorizontalContentAlignment="Left"
								        ToolTip="{x:Static properties:Captions.CopyToClipboard}"
								        Style="{DynamicResource ToolTipButtonStyle}"
								        Command="{Binding CopyToClipboardCommand}" CommandParameter="{Binding SelectedItem.Password}">
									<Button.Content>
										<Grid>
											<PasswordBox IsHitTestVisible="False" ui:PasswordBoxExtensions.Attach="True" BorderThickness="0" ContextMenu="{x:Null}"
											             ui:PasswordBoxExtensions.Password="{Binding SelectedItem.Password, Mode=TwoWay}">
												<PasswordBox.Style>
													<Style TargetType="PasswordBox" BasedOn="{StaticResource {x:Type PasswordBox}}">
														<Setter Property="Visibility" Value="Visible"/>
														<Style.Triggers>
															<DataTrigger Binding="{Binding ElementName=ShowPasswordToggleButton, Path=IsChecked}" Value="True">
																<Setter Property="Visibility" Value="Hidden"/>
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</PasswordBox.Style>
											</PasswordBox>

											<TextBox IsHitTestVisible="False" BorderThickness="0" ContextMenu="{x:Null}" Text="{Binding SelectedItem.Password}">
												<TextBox.Style>
													<Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
														<Setter Property="Visibility" Value="Visible"/>
														<Style.Triggers>
															<DataTrigger Binding="{Binding ElementName=ShowPasswordToggleButton, Path=IsChecked}" Value="False">
																<Setter Property="Visibility" Value="Hidden"/>
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</TextBox.Style>
											</TextBox>
										</Grid>
									</Button.Content>
								</Button>

								<ToggleButton Grid.Column="1" Margin="0 0 4 0" x:Name="ShowPasswordToggleButton"
											  Content="{md:PackIcon Eye}" md:ToggleButtonAssist.OnContent="{md:PackIcon EyeOff}"
								              Style="{DynamicResource MaterialDesignActionToggleButton}"
								              ToolTip="{x:Static properties:Captions.ShowPassword}"/>
							</Grid>

							<TextBlock Margin="8 4 0 4" Grid.Column="0" Grid.Row="3" VerticalAlignment="Center"
							           Text="{x:Static properties:Captions.Email}"/>
							<Button Margin="4 4 8 4" Grid.Column="1" Grid.Row="3" HorizontalContentAlignment="Left"
							        ToolTip="{x:Static properties:Captions.CopyToClipboard}"
							        Style="{DynamicResource ToolTipButtonStyle}" Content="{Binding SelectedItem.Email}"
							        Command="{Binding CopyToClipboardCommand}" CommandParameter="{Binding SelectedItem.Email}"/>

							<TextBlock Margin="8 4 0 4" Grid.Column="0" Grid.Row="4" VerticalAlignment="Center"
							           Text="{x:Static properties:Captions.Site}"/>
							<Button Margin="4 4 8 4" Grid.Column="1" Grid.Row="4" HorizontalContentAlignment="Left"
							        ToolTip="{x:Static properties:Captions.OpenInBrowser}"
							        Style="{DynamicResource ToolTipButtonStyle}" Content="{Binding SelectedItem.WebSite}"
							        Command="{Binding OpenBrowserCommand}" CommandParameter="{Binding SelectedItem.WebSite}"/>

							<TextBlock Margin="8 4 0 4" Grid.Column="0" Grid.Row="5" VerticalAlignment="Center"
							           Text="{x:Static properties:Captions.Notes}"/>
							<Button Margin="4 4 8 4" Grid.Column="1" Grid.Row="5" HorizontalContentAlignment="Left"
							        ToolTip="{x:Static properties:Captions.CopyToClipboard}"
							        Style="{DynamicResource ToolTipButtonStyle}" Content="{Binding SelectedItem.Notes}"
							        Command="{Binding CopyToClipboardCommand}" CommandParameter="{Binding SelectedItem.Notes}"/>
						</Grid>
					</md:Card>

					<StatusBar Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
						<TextBlock Margin="4">
							<TextBlock.Style>
								<Style TargetType="TextBlock">
									<Setter Property="Text" Value="{Binding Repository.FilePath}"/>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Repository.FilePath}" Value="{x:Null}">
											<Setter Property="Text" Value="{x:Static properties:Captions.Untitled}"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding Repository}" Value="{x:Null}">
											<Setter Property="Text" Value="{x:Static system:String.Empty}"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>
					</StatusBar>
				</Grid>

				<Menu Grid.Row="0">
					<MenuItem Header="{x:Static properties:Captions.File}">
						<MenuItem Header="{x:Static properties:Captions.NewEllipsis}" Icon="{md:PackIcon Plus}"
						          Command="{Binding NewFileCommand}"/>
						<MenuItem Header="{x:Static properties:Captions.OpenEllipsis}" Icon="{md:PackIcon OpenInNew}"
						          Command="{Binding OpenFileCommand}"/>
						<MenuItem Header="{x:Static properties:Captions.Close}" Icon="{md:PackIcon Close}"
						          Command="{Binding CloseFileCommand}"/>
						<Separator/>
						<MenuItem Header="{x:Static properties:Captions.Save}" Icon="{md:PackIcon ContentSave}"
						          Command="{Binding SaveFileCommand}"/>
						<MenuItem Header="{x:Static properties:Captions.SaveAsEllipsis}" Icon="{md:PackIcon ContentSave}"
						          Command="{Binding SaveFileAsCommand}"/>
						<Separator/>
						<MenuItem Header="{x:Static properties:Captions.ChangePassword}" Icon="{md:PackIcon Settings}"
						          Command="{Binding FileSettingsCommand}"/>
						<Separator/>
						<MenuItem Header="{x:Static properties:Captions.Exit}" Icon="{md:PackIcon ExitToApp}"
						          Command="{Binding ExitCommand}"/>
					</MenuItem>
					<MenuItem Header="{x:Static properties:Captions.Edit}">
						<MenuItem Header="{x:Static properties:Captions.AddEntry}" Icon="{md:PackIcon Plus}"
						          Command="{Binding AddItemCommand}"/>
						<MenuItem Header="{x:Static properties:Captions.EditEntry}" Icon="{md:PackIcon Pencil}"
						          Command="{Binding EditItemCommand}"/>
						<MenuItem Header="{x:Static properties:Captions.RemoveEntry}" Icon="{md:PackIcon Delete}"
						          Command="{Binding RemoveItemCommand}"/>
					</MenuItem>
					<MenuItem Header="{x:Static properties:Captions.Help}">
						<MenuItem Header="{x:Static properties:Captions.AboutEllipsis}" Icon="{md:PackIcon HelpCircleOutline}"
						          Command="{Binding AboutCommand}"/>
					</MenuItem>
				</Menu>
			</Grid>
		</md:DrawerHost>
	</md:DialogHost>
</UserControl>
